{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/lecture-tables/lecture-tables.component.html","./src/app/lecture-tables/lecture-tables.component.ts","./src/app/login/error.interceptor.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/resource-table/resource-table.component.html","./src/app/resource-table/resource-table.component.ts","./src/app/routerConfig.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<!--The content below is only a placeholder and can be replaced.-->\n\n\n\n            <router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'AmivStudyDocuments';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LectureTablesComponent } from './lecture-tables/lecture-tables.component';\n\n\nimport { RouterModule } from '@angular/router';\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { AppRoutingModule } from './routerConfig';\n\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { MatSortModule, MatPaginatorModule, MatSelectModule, MatCheckboxModule, MatExpansionModule } from '@angular/material';\nimport { MatTableModule ,MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatTabsModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatCardModule} from '@angular/material/card';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ResourceTableComponent } from './resource-table/resource-table.component';\nimport { OverviewPageComponent } from './overview-page/overview-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ErrorInterceptor } from './login/error.interceptor';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LectureTablesComponent,\n    ResourceTableComponent,\n    OverviewPageComponent,\n    LoginComponent\n  ],\n  imports: [HttpClientModule,\n    MatCardModule,AppRoutingModule,\n    BrowserAnimationsModule,MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatTabsModule, MatFormFieldModule, MatInputModule,\n    BrowserModule,MatTableModule, MatSortModule, MatPaginatorModule,MatSelectModule,FlexLayoutModule,MatCardModule,MatProgressSpinnerModule, MatCheckboxModule,\nFormsModule,  MatListModule, MatExpansionModule\n  ],\n  providers: [\n       { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span>{{title}}</span>\n\n<!-- <div fxFlex></div>\n    <mat-nav-list  class=\"list-horizontal\">\n   <a mat-list-item [href] = \"id\" fragment=\"type\"  *ngFor = \"let type of typeLabels\"> {{type}} </a>\n  </mat-nav-list> -->\n\n  <div style=\"width:20px\"></div>\n  <mat-form-field class  =\"nav-dropdown\">\n    <mat-label>Departement</mat-label>\n    <mat-select [(value)]=\"depValue\"  (selectionChange)=\"onDepChanged()\">\n      <mat-option *ngFor = \"let dep of departement\" [value]=\"dep\">{{dep}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-spinner color=\"accent\" [diameter]=\"20\" [style.display]=\"showSpinner1 ? 'block' : 'none'\"></mat-spinner>\n\n\n\n  <mat-form-field class  =\"nav-dropdown\">\n    <mat-label>Semester</mat-label>\n    <mat-select [(value)]=\"semValue\"  (selectionChange)=\"onSemChanged()\">\n      <mat-option *ngFor = \"let sem of semesters\" [value]=\"sem\">{{sem}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-spinner color=\"accent\" [diameter]=\"20\" [style.display]=\"showSpinner2 ? 'block' : 'none'\"></mat-spinner>\n\n    <mat-form-field class  =\"nav-dropdown\">\n      <mat-label>Vorlesung</mat-label>\n      <mat-select [(value)]=\"lectureValue\"  (selectionChange)=\"onLectureChanged()\">\n        <mat-option *ngFor = \"let lec of lectures\" [value]=\"lec\">{{lec}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-spinner color=\"accent\" [diameter]=\"20\" [style.display]=\"showSpinner3 ? 'block' : 'none'\"></mat-spinner>\n\n\n\n  </mat-toolbar-row>\n</mat-toolbar>\n\n\n<!--\n<p *ngFor = \"let lec of lectures\">\n    <a [href] = \"getPathForLec(lec)\">{{lec}}</a>\n  </p> -->\n\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly\">\n <div class=\"content\" style=\"text-align: center\"\n      fxFlex.gt-xs=\"500px\"\n      fxFlex.gt-sm=\"800px\"\n      fxFlex.gt-md=\"1000px\"\n      fxFlex.gt-lg=\"1140px\">\n\n\n\n      <div *ngFor = \"let type of typeLabels\" >\n      <app-resource-table [studyDocEntries] = \"getEntry(type)\" [idTag] = \"type\">\n      </app-resource-table>\n\n      </div>\n\n   </div>\n   </div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { StudyDocRecord, StudyDocEntry } from 'src/models/models';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-lecture-tables',\n  templateUrl: './lecture-tables.component.html',\n  styleUrls: ['./lecture-tables.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class LectureTablesComponent implements OnInit {\n  title:string = \"\";\n  token: string;\n\n  departement: Array<string> = [];\n  semesters: Array<string> = [];\n  depValue;\n  semValue;\n  lectureValue;\n  lectures : Array<string> = [];\n  showSpinner1: boolean = false;\n  showSpinner2: boolean = false;\n  showSpinner3: boolean = false;\n\n  onDepChanged() {\n    console.log(\"dep cahnged \" )\n    console.log(this.depValue);\n    this.loadForDepartement();\n  }\n  async delay(ms: number) {\n      await new Promise(resolve => setTimeout(()=>resolve(), ms)).then(()=>console.log(\"fired\"));\n  }\n\n  onLectureChanged() {\n\n      let path = \"https://api.amiv.ethz.ch/studydocuments?where={\\\"lecture\\\":\\\"\" + this.lectureValue + \"\\\"}&sort=type%2C-course_year&max_result=500\";\n      console.log(path);\n      this.title = this.lectureValue\n\n      this.rootRecord = { _items: [] };\n      this.typeToEntryMap = {};\n      this.lastTypeAdded = undefined;\n      this.typeLabels = [];\n      this._typeLabels = [];\n      this.ref.markForCheck();\n\n      this.showSpinner3 = true;\n\n      this.rootRecord= { _items: [] };\n\n      this.router.navigate(['/lecture/'+this.lectureValue]);\n        this.loadDataForUrl(path, 1);\n      }\n  onSemChanged() {\n      this.loadForSemester();\n  }\n\n\n  getPathForLec(lec){\n    return \"/lecture/\" + lec.replace(\"/\",\"*\");\n  }\n  loadForSemester(){\n  //  let path = \"https://api.amiv.ethz.ch/studydocuments?where={\\\"department\\\":\\\"\"+ this.depValue + \"\\\",\\\"semester\\\":\\\"\"+ this.semValue + \"\\\" }\";\n    let path = \"https://api.amiv.ethz.ch/studydocuments?where=%7B%22semester%22%3A%7B%22%24in%22%3A%5B%22\"+/*\"5%2B\"*/ this.semValue+\"%22%5D%7D%2C%22department%22%3A%7B%22%24in%22%3A%5B%22\"+ this.depValue +\"%22%5D%7D%7D&sort=lecture%2C-course_year%2Ctype%2Ctitle%2Cauthor&max_results=10&page=1\"\n    path = path.replace(\"+\",\"%2B\");\n\n    console.log(path);\n\n\n    var header = {\n      headers: new HttpHeaders()\n        .set('Authorization',  this.token)\n    };\n\n    this.showSpinner2 = true;\n    this.http.get(path, header).subscribe( (data ) => {\n      let summary = data[\"_summary\"];\n\n      let lectures_load = summary[\"lecture\"];\n        this.lectures = [];\n    //  this.lectures =  [];\n\n        for(let lec in lectures_load){\n          console.log(lec)\n          this.lectures.push(lec);\n        }\n            this.showSpinner2 = false;\n\n      console.log(data[\"_summary\"]);\n    });\n  }\n  loadForDepartement() {\n\n        this.showSpinner1 = true;\n    let path = \"https://api.amiv.ethz.ch/studydocuments?where={\\\"department\\\":\\\"\"+ this.depValue + \"\\\"}\";\n    console.log(path);\n    var header = {\n      headers: new HttpHeaders()\n        .set('Authorization',  this.token)\n    };\n\n    this.http.get(path, header).subscribe( (data ) => {\n      let summary = data[\"_summary\"];\n      let semester = summary[\"semester\"];\n      this.semesters = [];\n      for(let sem in semester){\n        console.log(sem)\n        this.semesters.push(sem);\n      }\n\n      this.semesters =   this.semesters.sort((n1,n2) => {\n        if (n1 > n2) {\n            return 1;\n        }\n\n        if (n1 < n2) {\n            return -1;\n        }\n\n        return 0;\n    });\n\n        this.showSpinner1 = false;\n      console.log(data[\"_summary\"]);\n    });\n  }\n\n  loadMetaInformation() {\n\n        this.showSpinner1 = true;\n    let path = \"https://api.amiv.ethz.ch/studydocuments\";\n    var header = {\n      headers: new HttpHeaders()\n        .set('Authorization',  this.token)\n    };\n\n    this.http.get(path, header).subscribe( (data ) => {\n      let summary = data[\"_summary\"];\n      let departements = summary[\"department\"];\n      this.departement = [];\n      for(let dep in departements){\n        console.log(dep)\n        this.departement.push(dep);\n      }\n      console.log(data[\"_summary\"]);\n\n          this.showSpinner1 = false;\n    });\n\n  }\n\n  columnsToDisplay = [\n  \"title\", \"professor\", \"author\", \"course_year\"\n  ];\n\n\ngetPath(item) {\n  return 'https://api.amiv.ethz.ch/' + item.file;\n}\n\n  rootRecord: StudyDocRecord = { _items: [] };\n  lastTypeAdded: string;\n  typeToEntryMap: Record<string, Array<StudyDocEntry>> = {};\n  typeLabels = [];\n  _typeLabels = [];\n\n    private fragment: string;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private http: HttpClient, private route : ActivatedRoute, private router: Router, private ref: ChangeDetectorRef) {\n    this.route.fragment.subscribe(fragment => { this.fragment = fragment; });\n  }\n\n  getLabelForKey(key: string) {\n    if(key == \"type\")\n      return \"Type\";\n\n    return key;\n  }\n\n  getRecordList() {\n    let recordList:  Array<Array<StudyDocEntry>> = [];\n    for(let entry in this.typeToEntryMap) {\n      recordList.push(this.typeToEntryMap[entry]);\n    }\n    return recordList;\n  }\n\ngetIdTag(item) {\n  console.log(\"get id tag\" + item);\n  return \"#\"+item;\n}\n\n\ngetEntry(type){\n  return this.typeToEntryMap[type];\n}\n\naddEntryToMap(e){\n\n  if(e.type in this.typeToEntryMap) {\n      this.typeToEntryMap[e.type].push(e);\n\n  } else {\n    this.typeToEntryMap[e.type] = [e]\n    this._typeLabels.push(e.type);\n\n\n    if(this.lastTypeAdded) {\n      // Added new type. store old ones\n      this.typeLabels.push(this.lastTypeAdded);\n    }\n  }\n  this.lastTypeAdded = e.type\n}\n\n// `Zca1pl7pxodMTQL88T8ziUQjoqwa60bZVe6xf9TC5fU`\n  loadDataForUrl(path: string, page:number){\n    var header = {\n      headers: new HttpHeaders()\n        .set('Authorization', this.token)\n    };\n\n    this.http.get(path + \"&page=\"+page, header).subscribe( (data : StudyDocRecord) => {\n      console.log(\"got data\");\n      console.log(data);\n      this.rootRecord = data;\n\n      data._items.forEach(e => {\n        this.addEntryToMap(e)\n      });\n      let links = data[\"_links\"];\n\n      if(links[\"next\"]) {\n        this.loadDataForUrl(path, ++page);\n      } else {\n        this.showSpinner3 = false;\n        // Date loaded, push last type.\n        if(this.lastTypeAdded) {\n          // Added new type. store old ones\n          this.typeLabels.push(this.lastTypeAdded);\n        }\n\n      }\n      console.log(this.typeToEntryMap)\n\n    })\n  }\n\n  ngOnInit() {\n    console.log(\"on init\");\n    this.token = localStorage.getItem(\"token\");\n\n    if(!this.token) {\n      this.router.navigate(['/login']);\n      //location.reload(true);\n    }\n    this.loadMetaInformation();\n    try {\n     document.querySelector('#' + this.fragment).scrollIntoView();\n   } catch (e) { }\n\n    let id = this.route.snapshot.params['id'];\n\n    if(!id) {\n      return;\n    }\n\n    id = id.replace(\"*\", \"/\")\n    this.title = id;\n    console.log(id);\n    let path = \"https://api.amiv.ethz.ch/studydocuments?where={\\\"lecture\\\":\\\"\" + id + \"\\\"}&sort=type%2C-course_year&max_result=500\";\n    this.loadDataForUrl(path, 1);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n/**\r\n* Listens for error answers. If we get a 401 err (not authorized) the jwt token is no longer valid and the user needs to be logged out.\r\n*/\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n\r\n            console.log(err);\r\n            if(!err){\r\n              return;\r\n            }\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.router.navigate(['/login'], { queryParams: { returnUrl: this.router.url } });\r\n                //location.reload(true);\r\n            }\r\n            return throwError(err);\r\n        }))\r\n    }\r\n}\r\n","\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly\">\n <div class=\"content\" style=\"text-align: center\"\n      fxFlex.gt-xs=\"500px\"\n      fxFlex.gt-sm=\"800px\"\n      fxFlex.gt-md=\"1000px\"\n      fxFlex.gt-lg=\"1140px\">\n\n\n      <mat-card class=\"example-card\" style=\"margin-top:10%\">\n\n         <mat-card-header>\n\n           <mat-card-title>Login</mat-card-title>\n\n         </mat-card-header>\n\n         <mat-card-content>\n\n\n           <form class=\"example-form\" style=\"margin-top:20px;\">\n\n             <table class=\"example-full-width\" cellspacing=\"0\" style=\"display:block\">\n\n               <tr>\n\n                 <td style=\"text-align:center\">\n                   <mat-form-field class=\"example-full-width\" style=\"display:block;\">\n                   <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n                   </mat-form-field>\n                 </td>\n\n               </tr>\n               <tr>\n\n                 <td style=\"text-align:center\">\n                   <mat-form-field class=\"example-full-width\" style=\"display:block;\">\n                   <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\" type = \"password\" required>\n                   </mat-form-field>\n                 </td>\n\n               </tr>\n\n\n\n           </table>\n\n           </form>\n\n\n\n         </mat-card-content>\n\n         <mat-card-actions>\n\n           <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n\n         </mat-card-actions>\n\n       </mat-card>\n\n\n\n      <mat-card class=\"example-card\" style=\"margin-top:10%\">\n\n         <mat-card-header>\n\n           <mat-card-title>Login (Token)</mat-card-title>\n\n         </mat-card-header>\n\n         <mat-card-content>\n\n           <mat-expansion-panel>\n             <mat-expansion-panel-header>\n               <mat-panel-title>\n                   <h2> How to obtain token: </h2>\n               </mat-panel-title>\n             </mat-expansion-panel-header>\n\n\n           <ul style=\"text-align: left\">\n            <li> 1) Login on the AMIV Website and select keep me logged in </li>\n            <li> 2) While still on the AMIV Website open the Javascript console:\n\n            <ul>\n              <li> <span> Firefox:<kbd>Ctrl</kbd> <kbd>Shift</kbd>  +<kbd>K</kbd> </span></li>\n              <li> <span> Chrome / Edge:<kbd>Ctrl</kbd> <kbd>Shift</kbd> +  <kbd>J</kbd> </span></li>\n            </ul>\n            <li> Enter the following to get your Token:\n              <p>\n                <code>JSON.parse(localStorage.getItem(\"session\")).token</code>\n                </p>\n           </li>\n           </ul>\n\n\n            <img src=\"./assets/token.png\" style = \"max-width:100%; height:auto;\">\n          </mat-expansion-panel>\n\n           <form class=\"example-form\" style=\"margin-top:20px;\">\n\n             <table class=\"example-full-width\" cellspacing=\"0\" style=\"display:block\">\n\n               <tr>\n\n                 <td style=\"text-align:center\">\n\n                   <mat-form-field class=\"example-full-width\" style=\"display:block;\">\n\n                   <input matInput placeholder=\"Session Token\" [(ngModel)]=\"token\" name=\"token\" required>\n\n                   </mat-form-field>\n\n                 </td>\n\n               </tr>\n\n\n\n\n           </table>\n\n           </form>\n\n\n\n         </mat-card-content>\n\n         <mat-card-actions>\n\n           <button mat-raised-button (click)=\"loginUsingToken()\" color=\"primary\">Set Token</button>\n\n         </mat-card-actions>\n\n       </mat-card>\n\n   </div>\n   </div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n\n  token: string;\n  keepLoggedIn: boolean;\n\n  constructor(private http: HttpClient,private router: Router) { }\n\n  ngOnInit() {\n  }\n  login() : void {\n\n      let body = {\"username\": this.username, \"password\":this.password};\n      let url = \"https://api.amiv.ethz.ch/sessions\"\n      this.http.post(url, body).subscribe(ret => {\n        if(ret && ret[\"token\"]) {\n          this.token = ret[\"token\"];\n          this.loginUsingToken();\n        }\n      })\n      this.password = \"\";\n\n      console.log(\"login\");\n      /*this.token = this.token.replace('\"',\"\");\n\n      localStorage.setItem(\"token\", this.token);\n\n      this.router.navigate(['/lecture']);\n*/\n\n\n}\n\n  loginUsingToken() : void {\n\n      console.log(\"login\");\n      this.token = this.token.replace('\"',\"\");\n\n      localStorage.setItem(\"token\", this.token);\n\n      this.router.navigate(['/lecture']);\n\n\n\n}\n\n}\n","\n\n\n<div class=\"mat-elevation-z8\" style=\"margin:20px;\" [id]=\"idTag\">\n<div class=\"title\">\n<h1 class=\"mat-h1 title\"> {{studyDocEntries[0].type}} </h1>\n</div>\n  <mat-form-field style=\"width:90%\">\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n  </mat-form-field>\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n    <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{getLabel(column)}} </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <div *ngIf = \"column!='files'\">\n      {{element[column]}}\n      </div>\n      <div class =\"links\" *ngIf = \"column=='files'\">\n        <mat-list>\n\n          <mat-list-item *ngFor = \"let file of element['files']\">\n\n             <button mat-stroked-button (click) = \"openRes(file)\" color=\"primary\"> {{getLinkName(file.name)}}  <mat-icon style=\"color:black;font-size: 20px;\nmargin-top: 2px;\">open_in_new</mat-icon></button>\n\n\n            </mat-list-item>\n          </mat-list>\n      </div>\n\n    </td>\n    </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; let even = even; columns: displayedColumns;\"    [ngClass]=\"{gray: even}\"></tr>\n </table>\n\n<!--<table mat-table\n       [dataSource]=\"dataSource\" matSort multiTemplateDataRows>\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{getLabelForKey(column)}} </th>\n\n    <td mat-cell *matCellDef=\"let element\"> {{getContent(element, column)}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"'expanded'\">\n\n        <div style =\"text-align:right; width:100%\" class=\"example-element-description\" *ngFor = \"let file of element.files\"  style = \"text-align:center\">\n        <a [href] = \"getPath(file)\"> {{file.name}} </a>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>  -->\n <mat-paginator [pageSizeOptions]=\"[15, 30, 100]\"></mat-paginator>\n </div>\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { StudyDocEntry } from 'src/models/models';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatIconModule} from '@angular/material/icon';\n\n@Component({\n  selector: 'app-resource-table',\n  templateUrl: './resource-table.component.html',\n  styleUrls: ['./resource-table.component.scss'],\n/*  animations: [\n      trigger('detailExpand', [\n        state('collapsed', style({height: '0px', minHeight: '0'})),\n        state('expanded', style({height: '*'})),\n        transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n      ]),\n    ] */\n})\nexport class ResourceTableComponent implements OnInit {\n\n\n    LIMIT = 30;\n\n      getLinkName(fileName){\n        if(fileName.length > this.LIMIT) {\n            return fileName.substring(0, this.LIMIT - 7,) + \"...\" + fileName.substring(fileName.indexOf(\".\"), fileName.length)\n        }\n        return fileName;\n      }\n\n  getContent(element, column){\n    if(column == \"files\") {\n      let files = element[column];\n\n    }\n    return element[column];\n  }\n\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n    expandedElement: StudyDocEntry | null;\n\n    @Input()\n    idTag: String;\n\n    @Input()\n    public studyDocEntries :Array<StudyDocEntry>;\n    public dataSource: MatTableDataSource<StudyDocEntry>;\n\n    displayedColumns = [  \"title\", \"professor\", \"author\", \"course_year\", \"files\"]\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    columnsToDisplay = [\n    \"title\", \"professor\", \"author\", \"course_year\", \"files\"\n    ];\n\n  constructor() { }\n  openRes(file) {\n     window.open(this.getPath(file), \"_blank\");\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.studyDocEntries);\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n\n    getLabel(key: string) {\n      if(key == \"title\")\n        return \"Titel\";\n        if(key == \"professor\")\n        return \"Professor  \"\n        if(key == \"author\")\n        return \"Autor\";\n        if(key == \"course_year\")\n        return \"Jahr\"\n        if(key == \"files\")\n        return \"Dateien\"\n\n      return key;\n    }\n\n  getPath(item) {\n    return 'https://api.amiv.ethz.ch/' + item.file;\n  }\n}\n","// routerConfig.ts\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LectureTablesComponent } from './lecture-tables/lecture-tables.component';\r\nimport { OverviewPageComponent } from './overview-page/overview-page.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\n\r\n/**\r\n* Array containing all paths<->Components  the application knows.\r\n*/\r\nconst routes: Routes = [\r\n  { path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  { path: 'lecture/:id',\r\n    component: LectureTablesComponent\r\n  }, {\r\n    path: \"\",\r\n    component: LectureTablesComponent\r\n  }, {\r\n    path: \"lecture\",\r\n    component: LectureTablesComponent\r\n  }\r\n  ];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}